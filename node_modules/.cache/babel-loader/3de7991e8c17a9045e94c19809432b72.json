{"ast":null,"code":"var _jsxFileName = \"/home/luyao/Desktop/CS185/my_movie_site/src/components/MovieGallery.js\";\nimport React, { useState, Component } from \"react\";\nimport Movie from \"./movie_element.js\";\nimport GridList from \"@material-ui/core/GridList\";\nimport Modal from \"@material-ui/core/Modal\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteSweepIcon from '@material-ui/icons/DeleteSweep';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport Dropdown from './Dropdown';\nimport config from './config.js';\n\nfunction rootStyle() {\n  return {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\"\n  };\n}\n\nfunction GridListStyle() {\n  return {\n    width: \"95%\",\n    height: \"85vh\" //position: \"fixed\",\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    //transform: \"translateZ(0)\",\n\n  };\n}\n\nfunction info() {\n  return {\n    width: \"auto\",\n    height: \"auto\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    paddingTop: \"23%\",\n    paddingLeft: \"10px\",\n    paddingRight: \"10px\",\n    lineHeight: \"200%\",\n    backgroundColor: \"#c3cfe2\"\n  };\n}\n\nfunction getModalStyle() {\n  return {\n    top: \"20%\",\n    left: \"20%\",\n    backgroundColor: \"transparent\",\n    position: \"absolute\",\n    display: \"flex\"\n  };\n} //Fetch data from firebase\n\n\nconst firebase = require('firebase');\n\nexport default class MovieGallery extends Component {\n  constructor() {\n    super();\n    this.state = {\n      moviePoster: \"\",\n      open: false,\n      key: 1,\n      isOpen: false,\n      toggle: 0,\n      visible: 8,\n      movies_list: [],\n      perf_listSelection: [],\n      perf_list: [],\n      //All, wannaWatch, Watched, etc\n      active_list: []\n    };\n\n    this.changeMoviePoster = data => {\n      this.setState({\n        moviePoster: data\n      });\n    };\n\n    this.changeKey = k => {\n      this.setState({\n        key: k\n      });\n    };\n\n    this.setOpen = o => {\n      this.setState({\n        open: o\n      });\n    };\n\n    this.loadmore = this.loadmore.bind(this); //bind evnt handler! \n\n    this.listSelectOnChange = this.listSelectOnChange.bind(this); //initialize firebase\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    } // recvObjects.forEach((item, index) => {\n    //   console.log(item)\n    //   console.log(\"in state: \" + this.state.movies_list[index])\n    // })\n\n  } //load more button \n\n\n  loadmore() {\n    //binded in constructor\n    this.setState(old => {\n      return {\n        visible: old.visible + 8\n      }; //trys to set visible 8 more movies   \n    });\n  }\n\n  componentDidMount() {\n    console.log(\"component did mount!\");\n    let AllLists = firebase.database().ref('AllLists');\n    let allMovies = AllLists.child('All'); //\n    //  Update all movies info from data base\n    //\n\n    var recvObjects = [];\n    var cnt = 0;\n    allMovies.on('value', snapshot => {\n      const receivedJSON = snapshot.val(); //console.log(receivedJSON);\n      //loop through all movies in database\n\n      snapshot.forEach(function (childSnapshot) {\n        //receive single movie info\n        var recvIMDbID = childSnapshot.child(\"IMDbID\").val();\n        var recvTitle = childSnapshot.child(\"Title\").val();\n        var recvDirector = childSnapshot.child(\"Director\").val();\n        var recvRating = childSnapshot.child(\"Rating\").val();\n        var recvPosterURL = childSnapshot.child(\"PosterURL\").val();\n        var recvActors = childSnapshot.child(\"Actors\").val();\n        var recvGenre = childSnapshot.child(\"Genre\").val();\n        var recvKey = childSnapshot.child(\"IMDbID\").val();\n        recvObjects.push({\n          key: recvKey,\n          IMDbID: recvIMDbID,\n          Title: recvTitle,\n          PosterURL: recvPosterURL,\n          Director: recvDirector,\n          Actors: recvActors,\n          Genre: recvGenre,\n          Rating: recvRating\n        }); //make into object      \n      });\n      this.setState({\n        movies_list: [...this.state.movies_list, ...recvObjects]\n      });\n      console.log(\"in state: \" + this.state.movies_list); //expected print [object object] ... \n    }); //\n    //  Update all lists names only\n    //\n    // let AllLists = firebase.database().ref('AllLists'); //root folder on firebase\n\n    var perfArraySelection = [];\n    var cnt = 0;\n    AllLists.on('value', snapshot => {\n      const receivedJSON = snapshot.val(); //console.log(receivedJSON);\n      //loop through all movies in database\n\n      snapshot.forEach((item, index) => {\n        //receive single movie info\n        perfArraySelection.push(item.key); //get the list\n\n        console.log(\"perference list name is: \" + perfArraySelection); //make into object      \n      });\n      this.setState({\n        perf_listSelection: [...this.state.perf_listSelection, ...perfArraySelection]\n      });\n    }); //\n    //  Gets all the lists and list movie info\n    //\n    // let AllLists = firebase.database().ref('AllLists'); //root folder on firebase\n\n    var perfArray = [];\n    var movie = [];\n    var cnt = 0;\n    AllLists.on('value', snapshot => {\n      const receivedJSON = snapshot.val(); //console.log(receivedJSON);\n      //loop through all movies in database\n\n      console.log(\"here\");\n      snapshot.forEach((eachList, index) => {\n        console.log(eachList.key);\n        eachList.forEach(function (singleMovie) {\n          //access movie\n          console.log(singleMovie.key + \": \" + singleMovie.val());\n          console.log(\"movie title: \" + singleMovie.child('Title').key);\n        });\n      }); // this.setState({\n      //   perf_listSelection:[...this.state.perf_listSelection,...perfArray]\n      // })\n    });\n  } //user chosed list of movie to display in gallery\n\n\n  listSelectOnChange(e) {\n    //set it to the state\n    this.setState({\n      [this.state.active_list]: this.state.perf_listSelection[e.target.index]\n    });\n    console.log(\"list selected: \" + this.state.list_selected);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      name: \"perf_listSelection\",\n      onChange: this.listSelectOnChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }\n    }, this.state.perf_listSelection.map((e, key) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: key,\n        value: e.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 22\n        }\n      }, e);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }\n    }, this.state.movies_list.map((s, index) => /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }\n    }, s.Title))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(GridList, {\n      cellHeight: 150,\n      spacing: 1,\n      style: GridListStyle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }\n    }, this.state.active_list.map(movie => /*#__PURE__*/React.createElement(Movie, {\n      movieid: movie.IMDbID,\n      indexKey: movie.key,\n      changeIndexKey: this.changeKey,\n      setOpen: this.setOpen,\n      changeMoviePoster: this.changeMoviePoster,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Modal, {\n      open: this.state.open,\n      onClose: () => {\n        this.setOpen(false);\n      },\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: getModalStyle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: info(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h7\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 19\n      }\n    }, \"Title: \", this.state.moviePoster.Title, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 59\n      }\n    }), \"Director: \", this.state.moviePoster.Director, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 65\n      }\n    }), \"Genre: \", this.state.moviePoster.Genre, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }\n    }), \"IMDB Rating: \", this.state.moviePoster.imdbRating), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      name: \"perf_listSelection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 23\n      }\n    }, this.state.perf_listSelection.map((e, key) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: key,\n        value: e.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 34\n        }\n      }, e.name);\n    })))), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.moviePoster.Poster,\n      height: \"auto\",\n      alt: \"poster\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => {\n        {\n          /*Remember that in state key === IMDBkey!*/\n        }\n        const deleteTargetKey = this.state.key; //key, which is IMDbID of the movie\n\n        var newMovieArray = [];\n        console.log('this movie key is' + this.state.key);\n        this.state.movies_list.forEach((item, index) => {\n          if (item.key != deleteTargetKey) {\n            newMovieArray.push(item); //push every item except delete target\n          }\n        });\n        console.log(newMovieArray);\n        this.setState({\n          movies_list: []\n        });\n        this.forceUpdate();\n        this.setState({\n          movies_list: [...newMovieArray]\n        });\n        this.forceUpdate(); // firebase.database().ref('AllLists').set(newMovieArray);\n\n        this.setOpen(false); //  this.forceUpdate();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DeleteSweepIcon, {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.loadmore,\n      style: {\n        position: 'relative',\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }\n    }, \"Load More~\")));\n  }\n\n}\n/*\n <div>\n        <GridList cellHeight={150} spacing={1} style={GridListStyle()}>\n          {Object.values(movies_list).map((movie) => (\n            <Movie\n              movieid={movie.id}\n              indexKey={movie.key}\n              changeIndexKey={this.changeKey}\n              setOpen={this.setOpen}\n              changeMoviePoster={this.changeMoviePoster}\n            />\n          ))}\n        </GridList>\n\n\n\n\n        <Modal\n          open={this.state.open}\n          onClose={() => {\n            this.setOpen(false);\n          }}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          {\n            <div style={getModalStyle()}>\n              <div style={info()}>\n                <h7>\n                  Title: {this.state.moviePoster.Title} <br />\n                  Director: {this.state.moviePoster.Director} <br />\n                  Genre: {this.state.moviePoster.Genre}\n                  <br />\n                  imdbRating: {this.state.moviePoster.imdbRating}\n                </h7>\n              </div>\n              <img\n                src={this.state.moviePoster.Poster}\n                height={\"auto\"}\n                alt={\"poster\"}\n              />\n            </div>\n          }\n        </Modal>\n        </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \nimport React, { Component } from 'react'\n\nimport ScrollTop from \"react-scrolltop-button\";\nimport { SRLWrapper } from \"simple-react-lightbox\"; // Import SRLWrapper\nimport SimpleReactLightbox from \"simple-react-lightbox\"; // Import Simple React Lightbox\nimport axios from 'axios';\n//API key: 16e23e6c\n//http://www.omdbapi.com/?apikey=16e23e6c&i=tt0167261\n//node node_modules/react-scripts/scripts/start.js\nexport default class MovieGallery extends Component {\n    \n    state = {\n      movieURL1: \"\",movieURL2: \"\",movieURL3:\"\",movieURL4:\"\",\n      movieURL5: \"\",movieURL6: \"\",movieURL7: \"\",movieURL8:\"\",\n      movies: [\n        {IMBD_ID:\"tt7605074\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"},\n        {IMBD_ID:\"tt0816692\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"},\n        {IMBD_ID:\"tt1457767\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"},\n        {IMBD_ID:\"tt0499549\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"},\n        {IMBD_ID:\"tt4154796\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"},\n        {IMBD_ID:\"tt5700672\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"},\n        {IMBD_ID:\"tt10039344\", title: \"\",director: \"\", rating:\"\", posterURL:\"\"},\n        {IMBD_ID:\"tt0198781\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"} \n        ]\n    };\n\n\n    constructor(props) {\n        super(props);\n        // TODO\n        var movieURLs = [\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]\n        var movieArray=[\n            {IMBD_ID:\"tt7605074\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"},             //The Wandering Earth\n            {IMBD_ID:\"tt0816692\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"},      //Interstellar\n            {IMBD_ID:\"tt1457767\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"},       //The Conjuring\n            {IMBD_ID:\"tt0499549\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"}, //Avatar\n            {IMBD_ID:\"tt4154796\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"},            //Avengers: Endgame\n            {IMBD_ID:\"tt5700672\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"},        //Train to Busan\n            {IMBD_ID:\"tt10039344\", title: \"\",director: \"\", rating:\"\", posterURL:\"\"},  //Countdown\n            {IMBD_ID:\"tt0198781\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"}         //Monsters, Inc.\n        ]\n        \n        const axios = require('axios').default; // axios.<method> will now provide autocomplete and parameter typings\n        \n        movieArray.forEach((item,index) => {\n            let url=\"https://www.omdbapi.com/?apikey=16e23e6c&i=\" + item.IMBD_ID;\n            let recvPack = axios.get(url);\n            //console.log(index);\n            //recvPack\n            axios.get(url)\n            .then(response => {\n                const packData      = response.data;\n                const recvTitle     = packData.Title;\n                const recvDirector  = packData.Director;\n                const recvRating    = packData.imdbRating;\n                const recvPosterURL = packData.Poster;\n                movieArray[index].title = recvTitle;\n                movieArray[index].director = recvDirector;\n                movieArray[index].rating = recvRating;\n                movieArray[index].posterURL = recvPosterURL;\n                movieURLs[index] = recvPosterURL;\n                //console.log(movieURLs[index])\n                //movieArray[index].title = packData.data.Title;                  //new value    \n            })\n            .then(() => {\n                console.log(\"movieURL is: \"+ movieURLs[0])\n                this.state.movieURL1 = movieURLs[0];\n                this.state.movies = movieArray\n                this.forceUpdate();\n            })\n                \n            \n\n        });\n  \n        \n      };\n      \n    componentWillMount(){\n        document.title=\"www.luyao-han.online\"     //define page name\n        \n       \n        //console.log(movieURLs[0])\n        //this.state.movies = movieArray;\n        //console.log(movieURLs[1])\n        \n        \n        \n        //console.log(this.state.movies)\n        //console.log(this.state.movieURL1)\n\n       \n      }\n    render() {\n        \n        // Create an object with the options that you want to use. The options are divided in 4 main objects. You don't need to define them all.\n    const SRLWrapperOptions = {\n       \n        settings: {\n            overlayColor: \"rgb(25, 136, 124)\",\n            autoplaySpeed: 1500,\n            transitionSpeed: 900,\n          },\n          buttons: {\n            backgroundColor: \"#1b5245\",\n            iconColor: \"rgba(126, 172, 139, 0.8)\",\n          },\n          caption: {\n            captionColor: \"#a6cfa5\",\n            captionFontFamily: \"Raleway, sans-serif\",\n            captionFontWeight: \"300\",\n            captionTextTransform: \"uppercase\",\n          }\n      \n    };\n\n\n  \n        const subSectionStyle={\n            margin: '0',\n\t\t\tpadding: '0',\n\t\t\tbackgroundColor: '#eb4d4b',\n\t\t\tbackgroundRepeat: 'repeat-y',\n            position: 'relative',\n            height: '75vh',\n            width: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontFamily: 'Raleway, sans-serif',\n            fontStyle: '32px', \n            textTransform: 'uppercase',\n            letterSpacing: '8px'\n        }\n\n        const bodyStyle={\n\t\t\tbackgroundColor: '#eb4d4b',\n            backgroundRepeat: 'repeat-y',\n            height:'200vh',\n            width:'100vw',\n            position: 'absolute',\n            display:'block'\n        }\n\n        \n        \n\n        const titleSectionStyle={\n            margin: '0',\n\t\t\tpadding: '0',\n\t\t\tbackgroundColor: '#eb4d4b',\n            backgroundRepeat: 'repeat-y',\n            height: '20vh',\n\t\t\tposition: 'relative'\n        }\n        const homeTitleStyle={\n            fontFamily: 'Monoton,cursive',\n            fontSize: '5vw',\n            position: 'relative',\n            top: '1vw', \n            left: '1vw', \n            color: 'white',\n        }\n\n        const lightboxOptions={\n            position:'relative',\n            overlayColor: \"rgb(25, 136, 124)\",\n            captionColor: \"#a6cfa5\",\n            captionFontFamily: \"Raleway, sans-serif\",\n            captionFontSize: \"22px\",\n            captionFontWeight: \"300\",\n            captionFontStyle: \"capitalize\",\n            buttonsBackgroundColor: \"#1b5245\",\n            buttonsIconColor: \"rgba(126, 172, 139, 0.8)\",\n            zIndex:'-1',\n            enablePanzoom:'true',\n            hideControlsAfter:'true',\n            showCaption:'false',\n            showDownloadButton:'false',\n          };\n          \n        const scrollTopButtonStyle={\n            background: 'white',\n\t        position: 'fixed',\n\t        bottom: '16px',\n\t        right: '32px',\n\t        width: '200px',\n\t        height: '50px',\n\t        //border-radius: 50%;\n\t        fontSize: '14px',\n\t        color: '#1f1f1f',\n\t        textDecoration:'none',\n\t        transition: 'all .4s'  \n        };\n\n\n        return (\n            <html>\n                <section style={titleSectionStyle}>\n\t\t            <font style={homeTitleStyle} >\n\t\t\t            Movies\n\t\t            </font>\n                </section>\n                <section style={bodyStyle}>                  \n                        <SimpleReactLightbox style={{display:'block'}}>\n                            <SRLWrapper>\n                            <a href={this.state.movies[0]['posterURL']} data-attribute=\"SRL\">\n                                <img src={this.state.movies[0]['posterURL']} \n                                className={'movie-posters'} \n                                alt={'Title: '+ this.state.movies[0]['title'] + ','\n                                + 'Director: ' + this.state.movies[0]['director'] + ',' \n                                + 'IMDB raing: '+ this.state.movies[0]['rating']}/>  \n                            </a>\n                          \n                            <a href={this.state.movies[1]['posterURL']} data-attribute=\"SRL\">\n                                <img src={this.state.movies[1]['posterURL']}  \n                                className={'movie-posters'} \n                                alt={'Title: '+ this.state.movies[1]['title'] + ','\n                                    + 'Director: ' + this.state.movies[1]['director'] + ',' \n                                    + 'IMDB raing: '+ this.state.movies[1]['rating']}/>  \n                            </a>\n                        \n                            <a href={this.state.movies[2]['posterURL']} data-attribute=\"SRL\">\n                                <img src={this.state.movies[2]['posterURL']}  \n                                className={'movie-posters'} \n                                alt={'Title: '+ this.state.movies[2]['title'] + ','\n                                + 'Director: ' + this.state.movies[2]['director'] + ',' \n                                + 'IMDB raing: '+ this.state.movies[2]['rating']}/>  \n                            </a>\n                       \n                            <a href={this.state.movies[3]['posterURL']} data-attribute=\"SRL\">\n                                <img src={this.state.movies[3]['posterURL']}  \n                                className={'movie-posters'} \n                                alt={'Title: '+ this.state.movies[3]['title'] + ','\n                                + 'Director: ' + this.state.movies[3]['director'] + ',' \n                                + 'IMDB raing: '+ this.state.movies[3]['rating']}/>    \n                            </a>\n                        \n                            <a href={this.state.movies[4]['posterURL']} data-attribute=\"SRL\">\n                                <img src={this.state.movies[4]['posterURL']}  \n                                className={'movie-posters'} \n                                alt={'Title: '+ this.state.movies[4]['title'] + ','\n                                + 'Director: ' + this.state.movies[4]['director'] + ',' \n                                + 'IMDB raing: '+ this.state.movies[4]['rating']}/>  \n                            </a>\n                        \n                            <a href={this.state.movies[5]['posterURL']} data-attribute=\"SRL\">\n                                <img src={this.state.movies[5]['posterURL']}  \n                                className={'movie-posters'} \n                                alt={'Title: '+ this.state.movies[5]['title'] + ','\n                                + 'Director: ' + this.state.movies[5]['director'] + ',' \n                                + 'IMDB raing: '+ this.state.movies[5]['rating']}/>   \n                            </a>\n                       \n                            <a href={this.state.movies[6]['posterURL']} data-attribute=\"SRL\">\n                                <img src={this.state.movies[6]['posterURL']}  \n                                className={'movie-posters'} \n                                alt={'Title: '+ this.state.movies[6]['title'] + ','\n                                + 'Director: ' + this.state.movies[6]['director'] + ',' \n                                + 'IMDB raing: '+ this.state.movies[6]['rating']}/>    \n                            </a>\n\n                            <a href={this.state.movies[7]['posterURL']} data-attribute=\"SRL\">\n                                <img src={this.state.movies[7]['posterURL']}  \n                                className={'movie-posters'} \n                                alt={'Title: '+ this.state.movies[7]['title'] + ','\n                                + 'Director: ' + this.state.movies[7]['director'] + ',' \n                                + 'IMDB raing: '+ this.state.movies[7]['rating']}/>    \n                            </a>\n                        </SRLWrapper>\n                    </SimpleReactLightbox>                          \n                </section>\n            </html>\n\t\n        )\n    }\n}\n*/","map":{"version":3,"sources":["/home/luyao/Desktop/CS185/my_movie_site/src/components/MovieGallery.js"],"names":["React","useState","Component","Movie","GridList","Modal","IconButton","DeleteSweepIcon","ButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","Dropdown","config","rootStyle","display","flexWrap","justifyContent","overflow","GridListStyle","width","height","info","textAlign","paddingTop","paddingLeft","paddingRight","lineHeight","backgroundColor","getModalStyle","top","left","position","firebase","require","MovieGallery","constructor","state","moviePoster","open","key","isOpen","toggle","visible","movies_list","perf_listSelection","perf_list","active_list","changeMoviePoster","data","setState","changeKey","k","setOpen","o","loadmore","bind","listSelectOnChange","apps","length","initializeApp","old","componentDidMount","console","log","AllLists","database","ref","allMovies","child","recvObjects","cnt","on","snapshot","receivedJSON","val","forEach","childSnapshot","recvIMDbID","recvTitle","recvDirector","recvRating","recvPosterURL","recvActors","recvGenre","recvKey","push","IMDbID","Title","PosterURL","Director","Actors","Genre","Rating","perfArraySelection","item","index","perfArray","movie","eachList","singleMovie","e","target","list_selected","render","map","value","s","imdbRating","name","Poster","deleteTargetKey","newMovieArray","forceUpdate","color","alignItems"],"mappings":"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","sourcesContent":["import React, { useState, Component } from \"react\";\n\nimport Movie from \"./movie_element.js\";\nimport GridList from \"@material-ui/core/GridList\";\nimport Modal from \"@material-ui/core/Modal\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteSweepIcon from '@material-ui/icons/DeleteSweep';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport Dropdown from './Dropdown';\nimport config from './config.js'\n\n\nfunction rootStyle() {\n  return {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n  };\n}\nfunction GridListStyle() {\n  return {\n    width: \"95%\",\n    height: \"85vh\",\n    //position: \"fixed\",\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    //transform: \"translateZ(0)\",\n  };\n}\nfunction info() {\n  return {\n    width: \"auto\",\n    height: \"auto\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    paddingTop: \"23%\",\n    paddingLeft: \"10px\",\n    paddingRight: \"10px\",\n    lineHeight: \"200%\",\n    backgroundColor: \"#c3cfe2\",\n  };\n}\nfunction getModalStyle() {\n  return {\n    top: \"20%\",\n    left: \"20%\",\n    backgroundColor: \"transparent\",\n    position: \"absolute\",\n    display: \"flex\",\n  };\n}\n\n\n//Fetch data from firebase\nconst firebase = require('firebase');\n\n\nexport default class MovieGallery extends Component {\n    \n  \n  constructor() {\n        super();\n        this.state = {\n          moviePoster: \"\",\n          open: false,\n          key: 1,\n          isOpen: false,\n          toggle: 0,\n          visible: 8,\n          movies_list: [], \n          perf_listSelection: [],  \n          perf_list: [],  //All, wannaWatch, Watched, etc\n          active_list:[]\n        };\n        this.changeMoviePoster = (data) => {\n          this.setState({\n            moviePoster: data,\n          });\n        };\n        this.changeKey = (k) => {\n          this.setState({\n            key: k,\n          });\n        };\n        this.setOpen = (o) => {\n          this.setState({\n            open: o,\n          });\n        };\n\n        this.loadmore = this.loadmore.bind(this);  //bind evnt handler! \n        this.listSelectOnChange = this.listSelectOnChange.bind(this)\n\n      //initialize firebase\n        if(!firebase.apps.length){\n          firebase.initializeApp(config)\n      }\n\n      \n        // recvObjects.forEach((item, index) => {\n        //   console.log(item)\n          \n        \n        //   console.log(\"in state: \" + this.state.movies_list[index])\n        // })\n      \n\n      \n\n  }\n\n  //load more button \n  loadmore(){         //binded in constructor\n    this.setState((old)=>{\n      return {visible: old.visible + 8}  //trys to set visible 8 more movies   \n    })\n  }\n  \n  \n  \n  componentDidMount(){\n    console.log(\"component did mount!\")\n      let AllLists = firebase.database().ref('AllLists')\n      let allMovies = AllLists.child('All')\n\n      //\n      //  Update all movies info from data base\n      //\n      var recvObjects = [];\n      var cnt = 0;\n      allMovies.on( 'value', snapshot => {\n        const receivedJSON = snapshot.val()\n        //console.log(receivedJSON);\n\n        //loop through all movies in database\n        snapshot.forEach(function(childSnapshot){\n          //receive single movie info\n          var recvIMDbID        = childSnapshot.child(\"IMDbID\").val();\n          var recvTitle         = childSnapshot.child(\"Title\").val();\n          var recvDirector      = childSnapshot.child(\"Director\").val();\n          var recvRating        = childSnapshot.child(\"Rating\").val();\n          var recvPosterURL     = childSnapshot.child(\"PosterURL\").val();\n          var recvActors        = childSnapshot.child(\"Actors\").val();\n          var recvGenre         = childSnapshot.child(\"Genre\").val();\n          var recvKey               = childSnapshot.child(\"IMDbID\").val();\n          recvObjects.push({\n              key:        recvKey,\n              IMDbID:     recvIMDbID,      \n              Title:      recvTitle,\n              PosterURL:  recvPosterURL,\n              Director:   recvDirector,\n              Actors:     recvActors,\n              Genre:      recvGenre,\n              Rating:     recvRating\n          })\n          //make into object      \n        })\n        \n\n        this.setState({\n          movies_list:[...this.state.movies_list,...recvObjects]\n        })\n        console.log(\"in state: \" + this.state.movies_list) //expected print [object object] ... \n      })\n\n      //\n      //  Update all lists names only\n      //\n      // let AllLists = firebase.database().ref('AllLists'); //root folder on firebase\n      var perfArraySelection = [];\n      var cnt = 0;\n      AllLists.on( 'value', snapshot => {\n        const receivedJSON = snapshot.val()\n        //console.log(receivedJSON);\n        //loop through all movies in database\n        snapshot.forEach((item, index) =>{\n          //receive single movie info\n          perfArraySelection.push(item.key); //get the list\n          \n          console.log(\"perference list name is: \" + perfArraySelection);\n        \n          //make into object      \n        })\n        this.setState({ \n          perf_listSelection:[...this.state.perf_listSelection,...perfArraySelection]\n        })\n       \n      });\n  \n\n\n      //\n      //  Gets all the lists and list movie info\n      //\n      // let AllLists = firebase.database().ref('AllLists'); //root folder on firebase\n      var perfArray = [];\n      var movie = [];\n      var cnt = 0;\n      AllLists.on( 'value', snapshot => {\n        const receivedJSON = snapshot.val()\n        //console.log(receivedJSON);\n        //loop through all movies in database\n        console.log(\"here\");\n        snapshot.forEach((eachList, index) =>{\n          console.log(eachList.key);\n           eachList.forEach(function(singleMovie){    //access movie\n              console.log(singleMovie.key+\": \"+singleMovie.val());\n              \n                console.log(\"movie title: \"+singleMovie.child('Title').key)\n                \n              \n           })\n        })\n        // this.setState({\n        //   perf_listSelection:[...this.state.perf_listSelection,...perfArray]\n        // })\n       \n      });\n\n\n}\n\n  //user chosed list of movie to display in gallery\n  listSelectOnChange(e) {\n  \n    //set it to the state\n    this.setState({\n      [this.state.active_list]: this.state.perf_listSelection[e.target.index]\n    });\n\n    console.log(\"list selected: \"+this.state.list_selected)\n  }\n\n  render() {\n    \n\n    return (\n      <div style={{display:\"block\"}}>\n        <div>\n          {/*Dropdown menu*/}\n          <select name=\"perf_listSelection\" onChange={this.listSelectOnChange}>\n            {this.state.perf_listSelection.map((e, key) => {\n              return <option key={key} value={e.value}>{e}</option>;\n            })}\n          </select>\n        </div>\n        \n          <div>\n            \n                {this.state.movies_list.map((s,index) => (\n                <h6> \n                {s.Title}\n                </h6>\n              ))}\n            \n\n          </div>\n\n\n        <div>\n          <GridList cellHeight={150} spacing={1} style={GridListStyle()}>\n                {/*{this.state.movies_list.slice(0,this.state.visible).map((movie) => (  */}\n                  {this.state.active_list.map((movie) => (\n                  <Movie\n                    movieid={movie.IMDbID}\n                    indexKey={movie.key}\n                    changeIndexKey={this.changeKey}\n                    setOpen={this.setOpen}\n                    changeMoviePoster={this.changeMoviePoster}\n                  />\n                ))}\n          </GridList>\n\n\n\n\n          <Modal\n            open={this.state.open}\n            onClose={() => {\n              this.setOpen(false);\n            }}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n          >\n            {\n              <div style={getModalStyle()}>\n                <div style={info()}>\n                  <h7>\n                    Title: {this.state.moviePoster.Title} <br />\n                    Director: {this.state.moviePoster.Director} <br />\n                    Genre: {this.state.moviePoster.Genre}\n                    <br />\n                    IMDB Rating: {this.state.moviePoster.imdbRating}\n\n                  </h7>\n                    <div>\n                      <select name=\"perf_listSelection\" >\n                        {this.state.perf_listSelection.map((e, key) => {\n                          return <option key={key} value={e.value}>{e.name}</option>;\n                        })}\n                      </select>\n                    </div>\n                </div>\n                <img\n                  src={this.state.moviePoster.Poster}\n                  height={\"auto\"}\n                  alt={\"poster\"}\n                />\n\n                <IconButton onClick={() => {\n                    {/*Remember that in state key === IMDBkey!*/} \n                    const  deleteTargetKey = this.state.key; //key, which is IMDbID of the movie\n                    var newMovieArray = [];\n                    console.log('this movie key is' + this.state.key);\n                    this.state.movies_list.forEach((item, index) => {\n                      if(item.key != deleteTargetKey){\n                        newMovieArray.push(item);  //push every item except delete target\n                      }\n                    });\n                    console.log(newMovieArray)\n                    this.setState({\n                      movies_list:[]    \n                    })\n                    this.forceUpdate();\n                     this.setState({\n                       movies_list:[...newMovieArray]    \n                     })\n                     this.forceUpdate();\n                    // firebase.database().ref('AllLists').set(newMovieArray);\n                      this.setOpen(false);\n                    //  this.forceUpdate();\n\n                  }} > \n                \n                  <DeleteSweepIcon\n                    style={{ color: \"red\" }}\n                  />\n                </IconButton>\n                \n              </div>\n            }\n          </Modal>\n\n          \n          <button type=\"button\" onClick={this.loadmore} style={{position:'relative',alignItems:'center'}}>Load More~</button>\n          \n         \n        </div>\n\n\n\n        \n       \n      </div>\n    );\n  }\n}\n/*\n <div>\n        <GridList cellHeight={150} spacing={1} style={GridListStyle()}>\n          {Object.values(movies_list).map((movie) => (\n            <Movie\n              movieid={movie.id}\n              indexKey={movie.key}\n              changeIndexKey={this.changeKey}\n              setOpen={this.setOpen}\n              changeMoviePoster={this.changeMoviePoster}\n            />\n          ))}\n        </GridList>\n\n\n\n\n        <Modal\n          open={this.state.open}\n          onClose={() => {\n            this.setOpen(false);\n          }}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          {\n            <div style={getModalStyle()}>\n              <div style={info()}>\n                <h7>\n                  Title: {this.state.moviePoster.Title} <br />\n                  Director: {this.state.moviePoster.Director} <br />\n                  Genre: {this.state.moviePoster.Genre}\n                  <br />\n                  imdbRating: {this.state.moviePoster.imdbRating}\n                </h7>\n              </div>\n              <img\n                src={this.state.moviePoster.Poster}\n                height={\"auto\"}\n                alt={\"poster\"}\n              />\n            </div>\n          }\n        </Modal>\n        </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \nimport React, { Component } from 'react'\n\nimport ScrollTop from \"react-scrolltop-button\";\nimport { SRLWrapper } from \"simple-react-lightbox\"; // Import SRLWrapper\nimport SimpleReactLightbox from \"simple-react-lightbox\"; // Import Simple React Lightbox\nimport axios from 'axios';\n//API key: 16e23e6c\n//http://www.omdbapi.com/?apikey=16e23e6c&i=tt0167261\n//node node_modules/react-scripts/scripts/start.js\nexport default class MovieGallery extends Component {\n    \n    state = {\n      movieURL1: \"\",movieURL2: \"\",movieURL3:\"\",movieURL4:\"\",\n      movieURL5: \"\",movieURL6: \"\",movieURL7: \"\",movieURL8:\"\",\n      movies: [\n        {IMBD_ID:\"tt7605074\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"},\n        {IMBD_ID:\"tt0816692\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"},\n        {IMBD_ID:\"tt1457767\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"},\n        {IMBD_ID:\"tt0499549\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"},\n        {IMBD_ID:\"tt4154796\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"},\n        {IMBD_ID:\"tt5700672\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"},\n        {IMBD_ID:\"tt10039344\", title: \"\",director: \"\", rating:\"\", posterURL:\"\"},\n        {IMBD_ID:\"tt0198781\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"} \n        ]\n    };\n\n\n    constructor(props) {\n        super(props);\n        // TODO\n        var movieURLs = [\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]\n        var movieArray=[\n            {IMBD_ID:\"tt7605074\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"},             //The Wandering Earth\n            {IMBD_ID:\"tt0816692\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"},      //Interstellar\n            {IMBD_ID:\"tt1457767\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"},       //The Conjuring\n            {IMBD_ID:\"tt0499549\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"}, //Avatar\n            {IMBD_ID:\"tt4154796\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"},            //Avengers: Endgame\n            {IMBD_ID:\"tt5700672\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"},        //Train to Busan\n            {IMBD_ID:\"tt10039344\", title: \"\",director: \"\", rating:\"\", posterURL:\"\"},  //Countdown\n            {IMBD_ID:\"tt0198781\" , title: \"\",director: \"\", rating:\"\", posterURL:\"\"}         //Monsters, Inc.\n        ]\n        \n        const axios = require('axios').default; // axios.<method> will now provide autocomplete and parameter typings\n        \n        movieArray.forEach((item,index) => {\n            let url=\"https://www.omdbapi.com/?apikey=16e23e6c&i=\" + item.IMBD_ID;\n            let recvPack = axios.get(url);\n            //console.log(index);\n            //recvPack\n            axios.get(url)\n            .then(response => {\n                const packData      = response.data;\n                const recvTitle     = packData.Title;\n                const recvDirector  = packData.Director;\n                const recvRating    = packData.imdbRating;\n                const recvPosterURL = packData.Poster;\n                movieArray[index].title = recvTitle;\n                movieArray[index].director = recvDirector;\n                movieArray[index].rating = recvRating;\n                movieArray[index].posterURL = recvPosterURL;\n                movieURLs[index] = recvPosterURL;\n                //console.log(movieURLs[index])\n                //movieArray[index].title = packData.data.Title;                  //new value    \n            })\n            .then(() => {\n                console.log(\"movieURL is: \"+ movieURLs[0])\n                this.state.movieURL1 = movieURLs[0];\n                this.state.movies = movieArray\n                this.forceUpdate();\n            })\n                \n            \n\n        });\n  \n        \n      };\n      \n    componentWillMount(){\n        document.title=\"www.luyao-han.online\"     //define page name\n        \n       \n        //console.log(movieURLs[0])\n        //this.state.movies = movieArray;\n        //console.log(movieURLs[1])\n        \n        \n        \n        //console.log(this.state.movies)\n        //console.log(this.state.movieURL1)\n\n       \n      }\n    render() {\n        \n        // Create an object with the options that you want to use. The options are divided in 4 main objects. You don't need to define them all.\n    const SRLWrapperOptions = {\n       \n        settings: {\n            overlayColor: \"rgb(25, 136, 124)\",\n            autoplaySpeed: 1500,\n            transitionSpeed: 900,\n          },\n          buttons: {\n            backgroundColor: \"#1b5245\",\n            iconColor: \"rgba(126, 172, 139, 0.8)\",\n          },\n          caption: {\n            captionColor: \"#a6cfa5\",\n            captionFontFamily: \"Raleway, sans-serif\",\n            captionFontWeight: \"300\",\n            captionTextTransform: \"uppercase\",\n          }\n      \n    };\n\n\n  \n        const subSectionStyle={\n            margin: '0',\n\t\t\tpadding: '0',\n\t\t\tbackgroundColor: '#eb4d4b',\n\t\t\tbackgroundRepeat: 'repeat-y',\n            position: 'relative',\n            height: '75vh',\n            width: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontFamily: 'Raleway, sans-serif',\n            fontStyle: '32px', \n            textTransform: 'uppercase',\n            letterSpacing: '8px'\n        }\n\n        const bodyStyle={\n\t\t\tbackgroundColor: '#eb4d4b',\n            backgroundRepeat: 'repeat-y',\n            height:'200vh',\n            width:'100vw',\n            position: 'absolute',\n            display:'block'\n        }\n\n        \n        \n\n        const titleSectionStyle={\n            margin: '0',\n\t\t\tpadding: '0',\n\t\t\tbackgroundColor: '#eb4d4b',\n            backgroundRepeat: 'repeat-y',\n            height: '20vh',\n\t\t\tposition: 'relative'\n        }\n        const homeTitleStyle={\n            fontFamily: 'Monoton,cursive',\n            fontSize: '5vw',\n            position: 'relative',\n            top: '1vw', \n            left: '1vw', \n            color: 'white',\n        }\n\n        const lightboxOptions={\n            position:'relative',\n            overlayColor: \"rgb(25, 136, 124)\",\n            captionColor: \"#a6cfa5\",\n            captionFontFamily: \"Raleway, sans-serif\",\n            captionFontSize: \"22px\",\n            captionFontWeight: \"300\",\n            captionFontStyle: \"capitalize\",\n            buttonsBackgroundColor: \"#1b5245\",\n            buttonsIconColor: \"rgba(126, 172, 139, 0.8)\",\n            zIndex:'-1',\n            enablePanzoom:'true',\n            hideControlsAfter:'true',\n            showCaption:'false',\n            showDownloadButton:'false',\n          };\n          \n        const scrollTopButtonStyle={\n            background: 'white',\n\t        position: 'fixed',\n\t        bottom: '16px',\n\t        right: '32px',\n\t        width: '200px',\n\t        height: '50px',\n\t        //border-radius: 50%;\n\t        fontSize: '14px',\n\t        color: '#1f1f1f',\n\t        textDecoration:'none',\n\t        transition: 'all .4s'  \n        };\n\n\n        return (\n            <html>\n                <section style={titleSectionStyle}>\n\t\t            <font style={homeTitleStyle} >\n\t\t\t            Movies\n\t\t            </font>\n                </section>\n                <section style={bodyStyle}>                  \n                        <SimpleReactLightbox style={{display:'block'}}>\n                            <SRLWrapper>\n                            <a href={this.state.movies[0]['posterURL']} data-attribute=\"SRL\">\n                                <img src={this.state.movies[0]['posterURL']} \n                                className={'movie-posters'} \n                                alt={'Title: '+ this.state.movies[0]['title'] + ','\n                                + 'Director: ' + this.state.movies[0]['director'] + ',' \n                                + 'IMDB raing: '+ this.state.movies[0]['rating']}/>  \n                            </a>\n                          \n                            <a href={this.state.movies[1]['posterURL']} data-attribute=\"SRL\">\n                                <img src={this.state.movies[1]['posterURL']}  \n                                className={'movie-posters'} \n                                alt={'Title: '+ this.state.movies[1]['title'] + ','\n                                    + 'Director: ' + this.state.movies[1]['director'] + ',' \n                                    + 'IMDB raing: '+ this.state.movies[1]['rating']}/>  \n                            </a>\n                        \n                            <a href={this.state.movies[2]['posterURL']} data-attribute=\"SRL\">\n                                <img src={this.state.movies[2]['posterURL']}  \n                                className={'movie-posters'} \n                                alt={'Title: '+ this.state.movies[2]['title'] + ','\n                                + 'Director: ' + this.state.movies[2]['director'] + ',' \n                                + 'IMDB raing: '+ this.state.movies[2]['rating']}/>  \n                            </a>\n                       \n                            <a href={this.state.movies[3]['posterURL']} data-attribute=\"SRL\">\n                                <img src={this.state.movies[3]['posterURL']}  \n                                className={'movie-posters'} \n                                alt={'Title: '+ this.state.movies[3]['title'] + ','\n                                + 'Director: ' + this.state.movies[3]['director'] + ',' \n                                + 'IMDB raing: '+ this.state.movies[3]['rating']}/>    \n                            </a>\n                        \n                            <a href={this.state.movies[4]['posterURL']} data-attribute=\"SRL\">\n                                <img src={this.state.movies[4]['posterURL']}  \n                                className={'movie-posters'} \n                                alt={'Title: '+ this.state.movies[4]['title'] + ','\n                                + 'Director: ' + this.state.movies[4]['director'] + ',' \n                                + 'IMDB raing: '+ this.state.movies[4]['rating']}/>  \n                            </a>\n                        \n                            <a href={this.state.movies[5]['posterURL']} data-attribute=\"SRL\">\n                                <img src={this.state.movies[5]['posterURL']}  \n                                className={'movie-posters'} \n                                alt={'Title: '+ this.state.movies[5]['title'] + ','\n                                + 'Director: ' + this.state.movies[5]['director'] + ',' \n                                + 'IMDB raing: '+ this.state.movies[5]['rating']}/>   \n                            </a>\n                       \n                            <a href={this.state.movies[6]['posterURL']} data-attribute=\"SRL\">\n                                <img src={this.state.movies[6]['posterURL']}  \n                                className={'movie-posters'} \n                                alt={'Title: '+ this.state.movies[6]['title'] + ','\n                                + 'Director: ' + this.state.movies[6]['director'] + ',' \n                                + 'IMDB raing: '+ this.state.movies[6]['rating']}/>    \n                            </a>\n\n                            <a href={this.state.movies[7]['posterURL']} data-attribute=\"SRL\">\n                                <img src={this.state.movies[7]['posterURL']}  \n                                className={'movie-posters'} \n                                alt={'Title: '+ this.state.movies[7]['title'] + ','\n                                + 'Director: ' + this.state.movies[7]['director'] + ',' \n                                + 'IMDB raing: '+ this.state.movies[7]['rating']}/>    \n                            </a>\n                        </SRLWrapper>\n                    </SimpleReactLightbox>                          \n                </section>\n            </html>\n\t\n        )\n    }\n}\n*/"]},"metadata":{},"sourceType":"module"}