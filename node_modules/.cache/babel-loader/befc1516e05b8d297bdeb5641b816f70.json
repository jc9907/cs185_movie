{"ast":null,"code":"var _jsxFileName = \"/home/luyao/Desktop/CS185/my_movie_site/src/components/Dropdown.js\";\n//Learned from source https://github.com/karlhadwen/react-dropdown-menu/blob/master/src/Dropdown.js\nimport React, { useState } from 'react';\nimport onClickOutside from 'react-onclickoutside';\n\nfunction Dropdown({\n  lists\n}) {\n  const [open, setOpen] = useState(false);\n\n  const toggle = () => setOpen(!open);\n\n  Dropdown.handleClickOutside = () => setOpen(false);\n\n  function handleOnClick(item) {\n    if (!selection.some(current => current.id === item.id)) {\n      if (!multiSelect) {\n        setSelection([item]);\n      } else if (multiSelect) {\n        setSelection([...selection, item]);\n      }\n    } else {\n      let selectionAfterRemoval = selection;\n      selectionAfterRemoval = selectionAfterRemoval.filter(current => current.id !== item.id);\n      setSelection([...selectionAfterRemoval]);\n    }\n  }\n\n  function isItemInSelection(item) {\n    if (selection.some(current => current.id === item.id)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  });\n}\n\nconst clickOutsideConfig = {\n  handleClickOutside: () => Dropdown.handleClickOutside\n};\nexport default onClickOutside(Dropdown, clickOutsideConfig);","map":{"version":3,"sources":["/home/luyao/Desktop/CS185/my_movie_site/src/components/Dropdown.js"],"names":["React","useState","onClickOutside","Dropdown","lists","open","setOpen","toggle","handleClickOutside","handleOnClick","item","selection","some","current","id","multiSelect","setSelection","selectionAfterRemoval","filter","isItemInSelection","clickOutsideConfig"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,sBAA3B;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA2B;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;;AACA,QAAMM,MAAM,GAAG,MAAMD,OAAO,CAAC,CAACD,IAAF,CAA5B;;AACAF,EAAAA,QAAQ,CAACK,kBAAT,GAA8B,MAAMF,OAAO,CAAC,KAAD,CAA3C;;AAEA,WAASG,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,QAAI,CAACC,SAAS,CAACC,IAAV,CAAeC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeJ,IAAI,CAACI,EAA9C,CAAL,EAAwD;AACtD,UAAI,CAACC,WAAL,EAAkB;AAChBC,QAAAA,YAAY,CAAC,CAACN,IAAD,CAAD,CAAZ;AACD,OAFD,MAEO,IAAIK,WAAJ,EAAiB;AACtBC,QAAAA,YAAY,CAAC,CAAC,GAAGL,SAAJ,EAAeD,IAAf,CAAD,CAAZ;AACD;AACF,KAND,MAMO;AACL,UAAIO,qBAAqB,GAAGN,SAA5B;AACAM,MAAAA,qBAAqB,GAAGA,qBAAqB,CAACC,MAAtB,CACtBL,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeJ,IAAI,CAACI,EADT,CAAxB;AAGAE,MAAAA,YAAY,CAAC,CAAC,GAAGC,qBAAJ,CAAD,CAAZ;AACD;AACF;;AAED,WAASE,iBAAT,CAA2BT,IAA3B,EAAiC;AAC/B,QAAIC,SAAS,CAACC,IAAV,CAAeC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeJ,IAAI,CAACI,EAA9C,CAAJ,EAAuD;AACrD,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAMD;;AAED,MAAMM,kBAAkB,GAAG;AACzBZ,EAAAA,kBAAkB,EAAE,MAAML,QAAQ,CAACK;AADV,CAA3B;AAIA,eAAeN,cAAc,CAACC,QAAD,EAAWiB,kBAAX,CAA7B","sourcesContent":["//Learned from source https://github.com/karlhadwen/react-dropdown-menu/blob/master/src/Dropdown.js\nimport React, { useState } from 'react';\nimport onClickOutside from 'react-onclickoutside';\n\nfunction Dropdown({lists}) {\n  const [open, setOpen] = useState(false);\n  const toggle = () => setOpen(!open);\n  Dropdown.handleClickOutside = () => setOpen(false);\n\n  function handleOnClick(item) {\n    if (!selection.some(current => current.id === item.id)) {\n      if (!multiSelect) {\n        setSelection([item]);\n      } else if (multiSelect) {\n        setSelection([...selection, item]);\n      }\n    } else {\n      let selectionAfterRemoval = selection;\n      selectionAfterRemoval = selectionAfterRemoval.filter(\n        current => current.id !== item.id\n      );\n      setSelection([...selectionAfterRemoval]);\n    }\n  }\n\n  function isItemInSelection(item) {\n    if (selection.some(current => current.id === item.id)) {\n      return true;\n    }\n    return false;\n  }\n\n  return (\n    <div>\n\n    </div>\n      \n  );\n}\n\nconst clickOutsideConfig = {\n  handleClickOutside: () => Dropdown.handleClickOutside,\n};\n\nexport default onClickOutside(Dropdown, clickOutsideConfig);"]},"metadata":{},"sourceType":"module"}