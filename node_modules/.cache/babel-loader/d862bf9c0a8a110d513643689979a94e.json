{"ast":null,"code":"var _jsxFileName = \"/Users/Jiachen/Documents/my_movie_site/src/components/AddMovie.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"../App.css\";\nimport config from \"./config.js\";\nimport useForm from \"./useForm\";\nimport { Alert } from \"reactstrap\";\n/*\nnode node_modules/reac  t-scripts/scripts/start.js\n\nFix react page doesn't update on file change *WORKS*\nsudo -i\necho 1048576 > /proc/sys/fs/inotify/max_user_watches\nexit\n\n*/\n\nconst firebase = require(\"firebase\");\n\nfunction AddMovie() {\n  const [shouldRender, setShouldRender] = useState(true);\n  let scrollRef = null; //used to refer scrollRef, so that on content change window is scrolled to bottom automaticallu\n\n  const divStyle = {\n    backgroundColor: \"#eadedb\",\n    backgroundRepeat: \"repeat-y\",\n    position: \"relative\",\n    height: \"80vh\",\n    width: \"100%\",\n    display: \"flex\",\n    //alignItems: 'center',\n    //justifyContent: 'center',\n    fontFamily: \"Raleway, sans-serif\",\n    fontStyle: \"2px\",\n    //textTransform: 'uppercase',\n    letterSpacing: \"1px\"\n  };\n  const formInputFontStyle = {\n    fontFamily: \"Raleway, sans-serif\",\n    fontStyle: \"32px\",\n    marginBottom: \"20px\"\n  };\n  const formInputDivStyle = {\n    position: \"relative\",\n    fontSize: \"12px\",\n    left: \"10vw\",\n    top: \"8vh\"\n  };\n  const formPrintDivStyle = {\n    position: \"absolute\",\n    left: \"35vw\",\n    top: \"8vh\",\n    width: \"60vw\",\n    height: \"60vh\",\n    border: \"dotted blue\",\n    borderWidth: \"2px\",\n    borderColor: \"#2a4944\"\n  };\n  const formLabelFontStyle = {\n    fontFamily: \"lucida grande,arial\",\n    fontSize: \"1vw\",\n    fontWeight: \"bold\",\n    color: \"#2E4A62\",\n    position: \"relative\",\n    top: \"0vw\",\n    left: \"-1vw\"\n  };\n  useEffect(() => {\n    //console.log(\"shouldRender: \" + shouldRender);\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n  });\n  const [data, setData] = useState([]);\n  const [values, setValues] = useState({\n    newMovieID: \"\"\n  });\n\n  const handleTextChange = event => {\n    console.log(event.target.name, \"new movie is:\" + event.target.value);\n    console.log(\"event.target.name is:\" + event.target.name);\n    setValues({\n      [event.target.name]: event.target.value\n    });\n    console.log(\"values.newMovieID\" + values.newMovieID);\n  }; //Submission function\n\n\n  const handleSubmit = event => {\n    console.log(\"enter submit callback for adding a new movie\");\n    event.preventDefault();\n    console.log(\"At submission, values.newMovieID is: \" + values.newMovieID);\n    let alreadyExist = false; //get a reference to the database\n\n    let AllLists = firebase.database().ref(\"AllLists\");\n    let allMovies = AllLists.child(\"All\");\n    allMovies.on(\"value\", snapshot => {\n      const receivedJSON = snapshot.val();\n      console.log(receivedJSON);\n      snapshot.forEach(function (childSnapshot) {\n        var IMDbID = childSnapshot.child(\"IMDbID\").val();\n\n        if (IMDbID == values.newMovieID) {\n          alreadyExist = true;\n        }\n      });\n    });\n    if (alreadyExist) console.log(\"❌Movie already in database, not added\");else console.log(\"✅ Movie not in database, now add\"); //if not existed in our own database, find it in IMDB and store to our own\n\n    if (!alreadyExist) {\n      const axios = require(\"axios\").default; // axios.<method> will now provide autocomplete and parameter typings\n\n\n      let url = \"https://www.omdbapi.com/?apikey=16e23e6c&i=\" + values.newMovieID;\n      let recvPack = axios.get(url);\n      let packData;\n      let recvTitle;\n      let recvDirector;\n      let recvRating;\n      let recvPosterURL;\n      let recvActors;\n      let recvGenre;\n      axios.get(url).then(response => {\n        //A unique ID, Title, Poster source, Director, IMDbID, Actors\n        packData = response.data;\n        recvTitle = packData.Title;\n        recvDirector = packData.Director;\n        recvRating = packData.imdbRating;\n        recvPosterURL = packData.Poster;\n        recvActors = packData.Actors;\n        recvGenre = packData.Genre; //console.log(movieURLs[index])\n        //movieArray[index].title = packData.data.Title;                  //new value\n      }).then(() => {\n        console.log(\"recvTitle is: \" + recvTitle);\n        console.log(\"recvDirector is: \" + recvDirector);\n        console.log(\"recvRating is: \" + recvRating);\n        console.log(\"recvPosterURL is: \" + recvPosterURL);\n        console.log(\"recvActors is: \" + recvActors);\n        console.log(\"recvGenre is: \" + recvGenre);\n        firebase.database().ref(\"AllLists\").child(\"All\").push({\n          IMDbID: values.newMovieID,\n          Title: recvTitle,\n          PosterURL: recvPosterURL,\n          Director: recvDirector,\n          Actors: recvActors,\n          Genre: recvGenre,\n          Rating: recvRating\n        });\n      });\n    }\n\n    setVisible(true); //set everything to default after submission\n\n    setValues({\n      newMovieID: \"\"\n    });\n  }; //used for configuring the alert box\n\n\n  const [visible, setVisible] = useState(false);\n\n  const onafterprint = () => setVisible(false);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: divStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: formInputDivStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: formLabelFontStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, \"IMDBid\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"newMovieID\",\n    type: \"newMovieID\",\n    value: values.newMovieID,\n    onChange: handleTextChange,\n    style: formInputFontStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: formInputDivStyle,\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, \"submit\")), /*#__PURE__*/React.createElement(Alert, {\n    style: formInputDivStyle,\n    color: \"info\",\n    isOpen: visible,\n    toggle: onafterprint,\n    fade: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, \"Add request sent!\")));\n}\n\nexport default AddMovie;","map":{"version":3,"sources":["/Users/Jiachen/Documents/my_movie_site/src/components/AddMovie.js"],"names":["React","useEffect","useState","config","useForm","Alert","firebase","require","AddMovie","shouldRender","setShouldRender","scrollRef","divStyle","backgroundColor","backgroundRepeat","position","height","width","display","fontFamily","fontStyle","letterSpacing","formInputFontStyle","marginBottom","formInputDivStyle","fontSize","left","top","formPrintDivStyle","border","borderWidth","borderColor","formLabelFontStyle","fontWeight","color","apps","length","initializeApp","data","setData","values","setValues","newMovieID","handleTextChange","event","console","log","target","name","value","handleSubmit","preventDefault","alreadyExist","AllLists","database","ref","allMovies","child","on","snapshot","receivedJSON","val","forEach","childSnapshot","IMDbID","axios","default","url","recvPack","get","packData","recvTitle","recvDirector","recvRating","recvPosterURL","recvActors","recvGenre","then","response","Title","Director","imdbRating","Poster","Actors","Genre","push","PosterURL","Rating","setVisible","visible","onafterprint"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../App.css\";\nimport config from \"./config.js\";\nimport useForm from \"./useForm\";\n\nimport { Alert } from \"reactstrap\";\n\n/*\nnode node_modules/reac  t-scripts/scripts/start.js\n\nFix react page doesn't update on file change *WORKS*\nsudo -i\necho 1048576 > /proc/sys/fs/inotify/max_user_watches\nexit\n\n*/\nconst firebase = require(\"firebase\");\n\nfunction AddMovie() {\n  const [shouldRender, setShouldRender] = useState(true);\n\n  let scrollRef = null; //used to refer scrollRef, so that on content change window is scrolled to bottom automaticallu\n\n  const divStyle = {\n    backgroundColor: \"#eadedb\",\n    backgroundRepeat: \"repeat-y\",\n    position: \"relative\",\n    height: \"80vh\",\n    width: \"100%\",\n    display: \"flex\",\n    //alignItems: 'center',\n    //justifyContent: 'center',\n    fontFamily: \"Raleway, sans-serif\",\n    fontStyle: \"2px\",\n    //textTransform: 'uppercase',\n    letterSpacing: \"1px\",\n  };\n  const formInputFontStyle = {\n    fontFamily: \"Raleway, sans-serif\",\n    fontStyle: \"32px\",\n    marginBottom: \"20px\",\n  };\n\n  const formInputDivStyle = {\n    position: \"relative\",\n    fontSize: \"12px\",\n    left: \"10vw\",\n    top: \"8vh\",\n  };\n\n  const formPrintDivStyle = {\n    position: \"absolute\",\n    left: \"35vw\",\n    top: \"8vh\",\n    width: \"60vw\",\n    height: \"60vh\",\n    border: \"dotted blue\",\n    borderWidth: \"2px\",\n    borderColor: \"#2a4944\",\n  };\n\n  const formLabelFontStyle = {\n    fontFamily: \"lucida grande,arial\",\n    fontSize: \"1vw\",\n    fontWeight: \"bold\",\n    color: \"#2E4A62\",\n    position: \"relative\",\n    top: \"0vw\",\n    left: \"-1vw\",\n  };\n\n  useEffect(() => {\n    //console.log(\"shouldRender: \" + shouldRender);\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n  });\n\n  const [data, setData] = useState([]);\n\n  const [values, setValues] = useState({ newMovieID: \"\" });\n\n  const handleTextChange = (event) => {\n    console.log(event.target.name, \"new movie is:\" + event.target.value);\n    console.log(\"event.target.name is:\" + event.target.name);\n    setValues({\n      [event.target.name]: event.target.value,\n    });\n    console.log(\"values.newMovieID\" + values.newMovieID);\n  };\n\n  //Submission function\n  const handleSubmit = (event) => {\n    console.log(\"enter submit callback for adding a new movie\");\n    event.preventDefault();\n    console.log(\"At submission, values.newMovieID is: \" + values.newMovieID);\n    let alreadyExist = false;\n\n    //get a reference to the database\n    let AllLists = firebase.database().ref(\"AllLists\");\n    let allMovies = AllLists.child(\"All\");\n\n    allMovies.on(\"value\", (snapshot) => {\n      const receivedJSON = snapshot.val();\n      console.log(receivedJSON);\n      snapshot.forEach(function (childSnapshot) {\n        var IMDbID = childSnapshot.child(\"IMDbID\").val();\n        if (IMDbID == values.newMovieID) {\n          alreadyExist = true;\n        }\n      });\n    });\n\n    if (alreadyExist) console.log(\"❌Movie already in database, not added\");\n    else console.log(\"✅ Movie not in database, now add\");\n\n    //if not existed in our own database, find it in IMDB and store to our own\n    if (!alreadyExist) {\n      const axios = require(\"axios\").default; // axios.<method> will now provide autocomplete and parameter typings\n\n      let url =\n        \"https://www.omdbapi.com/?apikey=16e23e6c&i=\" + values.newMovieID;\n      let recvPack = axios.get(url);\n      let packData;\n      let recvTitle;\n      let recvDirector;\n      let recvRating;\n      let recvPosterURL;\n      let recvActors;\n      let recvGenre;\n      axios\n        .get(url)\n        .then((response) => {\n          //A unique ID, Title, Poster source, Director, IMDbID, Actors\n          packData = response.data;\n          recvTitle = packData.Title;\n          recvDirector = packData.Director;\n          recvRating = packData.imdbRating;\n          recvPosterURL = packData.Poster;\n          recvActors = packData.Actors;\n          recvGenre = packData.Genre;\n          //console.log(movieURLs[index])\n          //movieArray[index].title = packData.data.Title;                  //new value\n        })\n        .then(() => {\n          console.log(\"recvTitle is: \" + recvTitle);\n          console.log(\"recvDirector is: \" + recvDirector);\n          console.log(\"recvRating is: \" + recvRating);\n          console.log(\"recvPosterURL is: \" + recvPosterURL);\n          console.log(\"recvActors is: \" + recvActors);\n          console.log(\"recvGenre is: \" + recvGenre);\n          firebase.database().ref(\"AllLists\").child(\"All\").push({\n            IMDbID: values.newMovieID,\n            Title: recvTitle,\n            PosterURL: recvPosterURL,\n            Director: recvDirector,\n            Actors: recvActors,\n            Genre: recvGenre,\n            Rating: recvRating,\n          });\n        });\n    }\n\n    setVisible(true);\n    //set everything to default after submission\n    setValues({ newMovieID: \"\" });\n  };\n\n  //used for configuring the alert box\n  const [visible, setVisible] = useState(false);\n  const onafterprint = () => setVisible(false);\n\n  return (\n    <div style={divStyle}>\n      <form onSubmit={handleSubmit} noValidate>\n        <div style={formInputDivStyle}>\n          <label style={formLabelFontStyle}>IMDBid</label>\n          <br />\n          <input\n            name=\"newMovieID\"\n            type=\"newMovieID\"\n            value={values.newMovieID}\n            onChange={handleTextChange}\n            style={formInputFontStyle}\n          />\n        </div>\n\n        <div style={formInputDivStyle} onClick={handleSubmit}>\n          <button type=\"submit\">submit</button>\n        </div>\n\n        <Alert\n          style={formInputDivStyle}\n          color=\"info\"\n          isOpen={visible}\n          toggle={onafterprint}\n          fade={true}\n        >\n          Add request sent!\n        </Alert>\n      </form>\n    </div>\n  );\n}\n\nexport default AddMovie;\n"]},"metadata":{},"sourceType":"module"}