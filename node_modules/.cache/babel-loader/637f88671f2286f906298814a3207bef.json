{"ast":null,"code":"var _jsxFileName = \"/home/luyao/Desktop/CS185/my_movie_site/src/components/AddMovie.js\";\nimport React, { useEffect, useState } from 'react';\nimport '../App.css';\nimport config from './config.js';\nimport useForm from './useForm';\nimport { Alert } from 'reactstrap';\n/*\nnode node_modules/reac  t-scripts/scripts/start.js\n\nFix react page doesn't update on file change *WORKS*\nsudo -i\necho 1048576 > /proc/sys/fs/inotify/max_user_watches\nexit\n\n*/\n\nconst firebase = require('firebase');\n\nfunction AddMovie() {\n  const [shouldRender, setShouldRender] = useState(true);\n  let scrollRef = null; //used to refer scrollRef, so that on content change window is scrolled to bottom automaticallu\n\n  const guestBookStyle = {\n    backgroundColor: '#eadedb',\n    backgroundRepeat: 'repeat-y',\n    position: 'relative',\n    height: '80vh',\n    width: '100%',\n    display: 'flex',\n    //alignItems: 'center',\n    //justifyContent: 'center',\n    fontFamily: 'Raleway, sans-serif',\n    fontStyle: '2px',\n    //textTransform: 'uppercase',\n    letterSpacing: '1px'\n  };\n  const formInputFontStyle = {\n    fontFamily: 'Raleway, sans-serif',\n    fontStyle: '32px',\n    marginBottom: '20px'\n  };\n  const formInputDivStyle = {\n    position: 'relative',\n    fontSize: '12px',\n    left: '10vw',\n    top: '8vh'\n  };\n  const formPrintDivStyle = {\n    position: 'absolute',\n    left: '35vw',\n    top: '8vh',\n    width: '60vw',\n    height: '60vh',\n    border: 'dotted blue',\n    borderWidth: '2px',\n    borderColor: '#2a4944'\n  };\n  const formLabelFontStyle = {\n    fontFamily: 'lucida grande,arial',\n    fontSize: '1vw',\n    fontWeight: 'bold',\n    color: '#2E4A62',\n    position: 'relative',\n    top: '0vw',\n    left: '-1vw'\n  };\n  useEffect(() => {\n    console.log(\"shouldRender: \" + shouldRender);\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n  });\n  const [data, setData] = useState([]);\n  const [values, setValues] = useState({\n    newMovieID: \"\"\n  });\n\n  const handleTextChange = event => {\n    console.log(event.target.name, \"new movie is:\" + event.target.value);\n    console.log(\"event.target.name is:\" + event.target.name);\n    setValues({\n      [event.target.name]: event.target.value\n    });\n  }; //Submission function\n\n\n  const handleSubmit = event => {\n    console.log(\"enter submit callback for adding a new movie\");\n    event.preventDefault();\n    console.log(\"values.newMovieID is: \" + values.newMovieID);\n    const alreadyExist = false; //get a reference to the database\n\n    let AllLists = firebase.database().ref('AllLists');\n    let allMovies = AllLists.child('All');\n    allMovies.on('value', snapshot => {\n      const receivedJSON = snapshot.val();\n      console.log(receivedJSON);\n      snapshot.forEach(function (childSnapshot) {\n        var IMDbID = childSnapshot.child(\"IMDbID\").val();\n\n        if (IMDbID == values.newMovieID) {\n          alreadyExist = true;\n        }\n      });\n    });\n\n    if (alreadyExist) {\n      firebase.database().ref('AllLists').child('All').push({\n        IMDbID: values.newMovieID\n      });\n    }\n\n    console.log(\"values.newMovieID is: \" + values.newMovieID);\n    setVisible(true); //set everything to default after submission\n\n    setValues({\n      newMovieID: \"\"\n    });\n  }; //used for configuring the alert box\n\n\n  const [visible, setVisible] = useState(false);\n\n  const onafterprint = () => setVisible(false);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"GuestBook\",\n    style: guestBookStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: formInputDivStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: formLabelFontStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"IMDBid\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"IMDbID\",\n    type: \"IMDbID\",\n    value: values.newMovieID,\n    onChange: handleTextChange,\n    style: formInputFontStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: formInputDivStyle,\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, \"submit\")), /*#__PURE__*/React.createElement(Alert, {\n    style: formInputDivStyle,\n    color: \"info\",\n    isOpen: visible,\n    toggle: onafterprint,\n    fade: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"Add request sent!\")));\n}\n\nexport default AddMovie;","map":{"version":3,"sources":["/home/luyao/Desktop/CS185/my_movie_site/src/components/AddMovie.js"],"names":["React","useEffect","useState","config","useForm","Alert","firebase","require","AddMovie","shouldRender","setShouldRender","scrollRef","guestBookStyle","backgroundColor","backgroundRepeat","position","height","width","display","fontFamily","fontStyle","letterSpacing","formInputFontStyle","marginBottom","formInputDivStyle","fontSize","left","top","formPrintDivStyle","border","borderWidth","borderColor","formLabelFontStyle","fontWeight","color","console","log","apps","length","initializeApp","data","setData","values","setValues","newMovieID","handleTextChange","event","target","name","value","handleSubmit","preventDefault","alreadyExist","AllLists","database","ref","allMovies","child","on","snapshot","receivedJSON","val","forEach","childSnapshot","IMDbID","push","setVisible","visible","onafterprint"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport '../App.css'\nimport config from './config.js'\nimport useForm from './useForm'\n\nimport { Alert } from 'reactstrap';\n\n/*\nnode node_modules/reac  t-scripts/scripts/start.js\n\nFix react page doesn't update on file change *WORKS*\nsudo -i\necho 1048576 > /proc/sys/fs/inotify/max_user_watches\nexit\n\n*/\nconst firebase = require('firebase')\n\nfunction AddMovie(){\n  \n    const [shouldRender , setShouldRender] = useState(true)\n    \n\n    let scrollRef = null; //used to refer scrollRef, so that on content change window is scrolled to bottom automaticallu\n\n\n    const guestBookStyle={\n       \n        backgroundColor: '#eadedb',\n        backgroundRepeat: 'repeat-y',\n        position: 'relative',\n        height: '80vh',\n        width: '100%',\n        display: 'flex',\n        //alignItems: 'center',\n        //justifyContent: 'center',\n        fontFamily: 'Raleway, sans-serif',\n        fontStyle: '2px', \n        //textTransform: 'uppercase',\n        letterSpacing: '1px'\n    }\n    const formInputFontStyle={\n      fontFamily: 'Raleway, sans-serif',\n      fontStyle: '32px', \n      marginBottom: '20px',\n    }\n\n    const formInputDivStyle={\n      position: 'relative',\n      fontSize: '12px',\n      left:'10vw',\n      top: '8vh'\n    }\n\n    const formPrintDivStyle={\n      position: 'absolute',\n      left:'35vw',\n      top: '8vh',\n      width: '60vw',\n      height: '60vh',\n      border: 'dotted blue',\n      borderWidth: '2px',\n      borderColor: '#2a4944',\n    }\n\n    const formLabelFontStyle={\n      fontFamily: 'lucida grande,arial',\n      fontSize: '1vw',\n      fontWeight: 'bold',\n      color: '#2E4A62',\n      position: 'relative',\n      top: '0vw',\n      left:'-1vw'\n    }\n   \n    useEffect(() => {\n      console.log(\"shouldRender: \" + shouldRender);\n      if(!firebase.apps.length){\n          firebase.initializeApp(config)\n      }\n    })\n\n\n    const [data,setData] = useState([]);\n        \n    const [values,setValues] = useState({newMovieID:\"\"}) \n\n    const handleTextChange = event =>{\n      console.log(event.target.name,\"new movie is:\" + event.target.value)\n      console.log(\"event.target.name is:\" + event.target.name,)\n      setValues({    \n        [event.target.name]: event.target.value, \n        });\n    };\n     \n    \n\n    //Submission function\n    const handleSubmit = event =>{  \n      console.log(\"enter submit callback for adding a new movie\")\n      event.preventDefault();\n      console.log(\"values.newMovieID is: \"+values.newMovieID)\n      const alreadyExist = false;\n      \n      //get a reference to the database\n      let AllLists = firebase.database().ref('AllLists')\n      let allMovies = AllLists.child('All')\n\n      allMovies.on( 'value', snapshot => {\n        const receivedJSON = snapshot.val()\n        console.log(receivedJSON);\n        snapshot.forEach(function(childSnapshot){\n          var IMDbID = childSnapshot.child(\"IMDbID\").val();\n          if(IMDbID == values.newMovieID){\n            alreadyExist = true;\n          }\n        })\n      })\n\n      if(alreadyExist){\n        firebase.database().ref('AllLists').child('All').push({IMDbID: values.newMovieID});\n      }\n      console.log(\"values.newMovieID is: \"+values.newMovieID)\n      \n      setVisible(true);          \n      //set everything to default after submission\n      setValues({newMovieID:\"\"}) \n      \n      \n  }\n                                             \n  \n    \n                                                        \n      //used for configuring the alert box\n    const [visible, setVisible] = useState(false);\n    const onafterprint = () => setVisible(false);\n\nreturn(\n    <div className=\"GuestBook\" style={guestBookStyle}>\n        <form onSubmit={handleSubmit} noValidate>\n        \n          <div style={formInputDivStyle}> \n            <label style={formLabelFontStyle}>IMDBid</label>\n            <br/>\n            <input name=\"IMDbID\" type=\"IMDbID\" value={values.newMovieID} onChange={handleTextChange} style={formInputFontStyle}/>\n          </div>\n          \n  \n          <div style={formInputDivStyle} onClick={handleSubmit} >\n            <button type=\"submit\">submit</button>\n          </div>\n\n          \n          <Alert style={formInputDivStyle} color=\"info\" isOpen={visible} toggle={onafterprint} fade={true} >\n            Add request sent!\n          </Alert>\n        </form>\n        \n    </div>\n)\n\n\n}\n\nexport default AddMovie;"]},"metadata":{},"sourceType":"module"}