{"version":3,"sources":["components/Tab.js","components/TabList.js","components/Home.js","components/movie_element.js","components/config.js","components/MovieGallery.js","components/AddMovie.js","components/CreateList.js","components/Body.js","App.js","index.js"],"names":["Tab","addStyling","props","tab","id","activeTab","backgroundColor","color","className","style","this","onClick","changeTab","bind","title","Component","TabList","tabs","map","eachTab","Movie","state","movieData","open","axios","get","movieid","then","res","data","setState","Poster","GridListTile","key","indexKey","cols","rows","src","alt","Title","GridListTileBar","titlePosition","actionIcon","IconButton","aria-label","changeIndexKey","setOpen","changeMoviePoster","actionPosition","background","width","height","config","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","require","MovieGallery","moviePoster","isOpen","toggle","visible","movies_list","perf_listSelection","listShown","movie_perf_pairs","changeKey","k","o","loadmore","listSelectOnChange","ModalDropOptions","perf_list","apps","length","old","AllLists","database","ref","allMovies","child","recvObjects","on","snapshot","val","forEach","childSnapshot","recvIMDbID","recvTitle","recvDirector","recvRating","recvPosterURL","recvActors","recvGenre","recvKey","push","IMDbID","PosterURL","Director","Actors","Genre","Rating","perfArraySelection","item","index","moviesMasterArray","moviesInOneArray","eachList","singleMovie","forceUpdate","eachPair","perfName","console","log","e","active_list","target","value","display","name","onChange","s","GridList","cellHeight","spacing","transform","movie","Modal","onClose","aria-labelledby","aria-describedby","top","left","position","justifyContent","textAlign","paddingTop","paddingLeft","paddingRight","lineHeight","imdbRating","newMovieArray","type","alignItems","AddMovie","useState","formInputDivStyle","fontSize","useEffect","newMovieID","values","setValues","handleSubmit","event","preventDefault","alreadyExist","receivedJSON","packData","default","url","response","setVisible","backgroundRepeat","fontFamily","fontStyle","letterSpacing","onSubmit","noValidate","fontWeight","marginBottom","Alert","fade","CreateList","newlist","set","Body","displayContent","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27ca5a26.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Tab extends Component {\n  //specify rules by adding functions\n  addStyling = () => {\n    if (this.props.tab.id === this.props.activeTab) {\n      return {\n        backgroundColor: \"gray\",\n        color: \"white\",\n      }; //specifying styling in function\n    } else {\n      return {\n        backgroundColor: \"white\",\n      };\n    }\n  };\n\n  render() {\n    return (\n      <div\n        className=\"Tab\"\n        style={this.addStyling()}\n        onClick={this.props.changeTab.bind(this, this.props.tab.id)}\n      >\n        <font className=\"each-tab\">{this.props.tab.title}</font>\n        <h1></h1>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport Tab from './Tab'\n//active state in here is props. Props is used to pass information to child state \nexport default class TabList extends Component {\n    render() {\n        return this.props.tabs.map((eachTab) => (//*Looping* over each tabs objects, and have them printed (by default vertically) on the screen\n            <Tab tab={eachTab} activeTab={this.props.activeTab} changeTab={this.props.changeTab}/>   //in tabs.js it access the actual name by {this.props.tab.title}\n        ));\n    }\n}\n","import React, { Component } from 'react'\nimport \"../App.css\"\nexport default class Home extends Component {\n    componentDidMount(){\n        document.title=\"www.luyao-han.online\"     //define page name\n      }\n    render() {\n        const titleSectionStyle={\n            margin: '0',\n\t\t\tpadding: '0',\n\t\t\tbackgroundColor: '#f0932b',\n            backgroundRepeat: 'repeat-y',\n            height: '20vh',\n\t\t\tposition: 'relative'\n        }\n\n        const introSectionStyle={\n            height:'100vh',\n            width: '70vw',\n            position: 'relative',\n            padding: '30px'\n        }\n\n        const subSectionStyle={\n            margin: '0',\n\t\t\tpadding: '0',\n\t\t\tbackgroundColor: '#f0932b',\n\t\t\tbackgroundRepeat: 'repeat-y',\n            position: 'relative',\n            height: '75vh',\n            width: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontFamily: 'Raleway, sans-serif',\n            fontStyle: '32px', \n            textTransform: 'uppercase',\n            letterSpacing: '8px'\n        }\n\n        const bodyStyle={\n\t\t\tmargin: '0',\n\t\t\tpadding: '0',\n\t\t\tbackgroundColor: '#f0932b',\n\t\t\tbackgroundRepeat: 'repeat-y',\n\t\t\tposition: 'relative'\n        }\n\n        \n        const homeTitleStyle={\n            fontFamily: 'Monoton,cursive',\n            fontSize: '5vw',\n            position: 'relative',\n            top: '1vw', \n            left: '1vw', \n            color: 'white',\n        }\n\n\n        return (\n            <html>\n                <section style={titleSectionStyle}>\n\t\t            <font style={homeTitleStyle} >\n\t\t\t            Welcome to my website \n\t\t            </font>\n                </section>\n                \n            </html>\n\t\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SubjectIcon from \"@material-ui/icons/Subject\";\n\nimport InfoIcon from \"@material-ui/icons/Info\";\nfunction titleBarStyle() {\n  return {\n    background:\n      \"linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, \" +\n      \"rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\",\n\n    width: \"100%\",\n    height: \"100%\",\n  };\n}\n\nclass Movie extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movieData: {},\n      open: false,\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\n        `https://www.omdbapi.com/?apikey=cab6a2b3&i=${this.props.movieid}&plot=full`\n      )\n      .then((res) => res.data)\n      .then((res) => {\n        this.setState({ movieData: res });\n      });\n  }\n\n  render() {\n    if (!this.state.movieData.Poster || this.state.movieData === \"N/A\")\n      return null;\n    return (\n      <GridListTile key={this.props.indexKey} cols={1} rows={2}>\n        <img\n          src={this.state.movieData.Poster}\n          alt={this.state.movieData.Title}\n        />\n        <GridListTileBar\n          title={this.state.movieData.Title}\n          titlePosition=\"top\"\n          actionIcon={\n            <IconButton\n              aria-label={`info ${this.state.movieData.Title}`}\n              style={{ color: \"white\" }}\n              onClick={() => {\n                this.props.changeIndexKey(this.props.indexKey);\n                this.props.setOpen(true);\n                this.props.changeMoviePoster(this.state.movieData);\n              }}\n            >\n              <InfoIcon />\n            </IconButton>\n          }\n          actionPosition=\"left\"\n          className={titleBarStyle()}\n        />\n      </GridListTile>\n    );\n  }\n}\n\nexport default Movie;\n","import firebase from \"firebase\";\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyACJ8-913EpzdE7eFQdAJvDLwhwWZL9-Ic\",\n  authDomain: \"cs185-react-6ffac.firebaseapp.com\",\n  databaseURL: \"https://cs185-react-6ffac.firebaseio.com\",\n  projectId: \"cs185-react-6ffac\",\n  storageBucket: \"cs185-react-6ffac.appspot.com\",\n  messagingSenderId: \"751577762405\",\n  appId: \"1:751577762405:web:07c30947f637efd9e7d48c\",\n};\n// Initialize Firebase\nvar config = firebase.initializeApp(firebaseConfig);\nexport default config;\n","import React, { useState, Component } from \"react\";\n\nimport Movie from \"./movie_element.js\";\nimport GridList from \"@material-ui/core/GridList\";\nimport Modal from \"@material-ui/core/Modal\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteSweepIcon from \"@material-ui/icons/DeleteSweep\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Select from \"@material-ui/core/Select\";\nimport {\n  ButtonDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\nimport config from \"./config.js\";\n\nfunction rootStyle() {\n  return {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n  };\n}\nfunction GridListStyle() {\n  return {\n    width: \"95%\",\n    height: \"85vh\",\n    transform: \"translateZ(0)\",\n  };\n}\nfunction info() {\n  return {\n    width: \"auto\",\n    height: \"auto\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    paddingTop: \"23%\",\n    paddingLeft: \"10px\",\n    paddingRight: \"10px\",\n    lineHeight: \"200%\",\n    backgroundColor: \"#c3cfe2\",\n  };\n}\nfunction getModalStyle() {\n  return {\n    top: \"20%\",\n    left: \"20%\",\n    backgroundColor: \"transparent\",\n    position: \"absolute\",\n    display: \"flex\",\n  };\n}\n\n//Fetch data from firebase\nconst firebase = require(\"firebase\");\n\nexport default class MovieGallery extends Component {\n  constructor() {\n    super();\n    this.state = {\n      moviePoster: \"\",\n      open: false,\n      key: 1,\n      isOpen: false,\n      toggle: 0,\n      visible: 8,\n      movies_list: [],\n      perf_listSelection: [],\n      listShown: [],\n      movie_perf_pairs: [],\n    };\n    this.changeMoviePoster = (data) => {\n      this.setState({\n        moviePoster: data,\n      });\n    };\n    this.changeKey = (k) => {\n      this.setState({\n        key: k,\n      });\n    };\n    this.setOpen = (o) => {\n      this.setState({\n        open: o,\n      });\n    };\n\n    this.loadmore = this.loadmore.bind(this); //bind evnt handler!\n    this.listSelectOnChange = this.listSelectOnChange.bind(this);\n    this.ModalDropOptions = this.ModalDropOptions.bind(this);\n    this.perf_list = [];\n    //initialize firebase\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n  }\n\n  loadmore() {\n    this.setState((old) => {\n      return { visible: old.visible + 8 }; //trys to set visible 8 more movies\n    });\n  }\n\n  componentWillMount() {\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n\n    let AllLists = firebase.database().ref(\"AllLists\");\n    let allMovies = AllLists.child(\"All\");\n\n    var recvObjects = [];\n    var cnt = 0;\n    allMovies.on(\"value\", (snapshot) => {\n      const receivedJSON = snapshot.val();\n\n      snapshot.forEach(function (childSnapshot) {\n        var recvIMDbID = childSnapshot.child(\"IMDbID\").val();\n        var recvTitle = childSnapshot.child(\"Title\").val();\n        var recvDirector = childSnapshot.child(\"Director\").val();\n        var recvRating = childSnapshot.child(\"Rating\").val();\n        var recvPosterURL = childSnapshot.child(\"PosterURL\").val();\n        var recvActors = childSnapshot.child(\"Actors\").val();\n        var recvGenre = childSnapshot.child(\"Genre\").val();\n        var recvKey = childSnapshot.child(\"IMDbID\").val();\n        recvObjects.push({\n          key: recvKey,\n          IMDbID: recvIMDbID,\n          Title: recvTitle,\n          PosterURL: recvPosterURL,\n          Director: recvDirector,\n          Actors: recvActors,\n          Genre: recvGenre,\n          Rating: recvRating,\n        });\n      });\n\n      this.setState({\n        movies_list: [...this.state.movies_list, ...recvObjects],\n      });\n    });\n\n    var perfArraySelection = [];\n    var cnt = 0;\n    AllLists.on(\"value\", (snapshot) => {\n      const receivedJSON = snapshot.val();\n\n      snapshot.forEach((item, index) => {\n        perfArraySelection.push(item.key); //get the list\n      });\n      this.setState({\n        perf_listSelection: [\n          ...this.state.perf_listSelection,\n          ...perfArraySelection,\n        ],\n      });\n    });\n\n    var perfArray = [];\n    var movie = [];\n    var cnt = 0;\n    var moviesMasterArray = [];\n    var moviesInOneArray = [];\n    AllLists.on(\"value\", (snapshot) => {\n      const receivedJSON = snapshot.val();\n\n      snapshot.forEach((eachList, index) => {\n        eachList.forEach(function (singleMovie) {\n          var recvIMDbID = singleMovie.child(\"IMDbID\").val();\n          var recvTitle = singleMovie.child(\"Title\").val();\n          var recvDirector = singleMovie.child(\"Director\").val();\n          var recvRating = singleMovie.child(\"Rating\").val();\n          var recvPosterURL = singleMovie.child(\"PosterURL\").val();\n          var recvActors = singleMovie.child(\"Actors\").val();\n          var recvGenre = singleMovie.child(\"Genre\").val();\n          var recvKey = singleMovie.child(\"IMDbID\").val();\n          moviesInOneArray.push({\n            key: recvKey,\n            IMDbID: recvIMDbID,\n            Title: recvTitle,\n            PosterURL: recvPosterURL,\n            Director: recvDirector,\n            Actors: recvActors,\n            Genre: recvGenre,\n            Rating: recvRating,\n          });\n        });\n      });\n      moviesMasterArray.push(moviesInOneArray);\n\n      this.perf_list = moviesMasterArray;\n\n      this.forceUpdate();\n\n      this.setState({\n        listShown: [...this.perf_list[0]],\n      });\n    });\n    this.forceUpdate();\n\n    var movie_perf_Array = [];\n    AllLists.on(\"value\", (snapshot) => {\n      const receivedJSON = snapshot.val();\n      snapshot.child(\"movie_perf_pairs\").forEach((eachPair, index) => {\n        var recvIMDbID = eachPair.child(\"IMDbID\").val();\n        eachPair.child(\"perfs\").forEach((perfName, index) => {\n          console.log(perfName.val());\n        });\n      });\n      moviesMasterArray.push(moviesInOneArray);\n\n      this.perf_list = moviesMasterArray;\n\n      this.forceUpdate();\n\n      this.setState({\n        listShown: [...this.perf_list[0]],\n      });\n    });\n    this.forceUpdate();\n  }\n\n  listSelectOnChange(e) {\n    this.setState({\n      [this.state.active_list]: this.state.perf_listSelection[e.target.index],\n    });\n  }\n\n  ModalDropOptions(e) {\n    this.state.perf_listSelection.map((e, key) => {\n      return (\n        <option key={key} value={e.value}>\n          {e}\n        </option>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div style={{ display: \"block\" }}>\n        <div>\n          Select List\n          <select name=\"perf_listSelection\" onChange={this.listSelectOnChange}>\n            {this.state.perf_listSelection.map((e, key) => {\n              return (\n                <option key={key} value={e.value}>\n                  {e}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n\n        <div>\n          {this.state.movies_list.map((s, index) => (\n            <h6>{s.Title}</h6>\n          ))}\n        </div>\n\n        <div>\n          <GridList cellHeight={150} spacing={1} style={GridListStyle()}>\n            {/*{this.state.movies_list.slice(0,this.state.visible).map((movie) => (  */}\n\n            {this.state.movies_list.map((movie) => (\n              <Movie\n                movieid={movie.IMDbID}\n                indexKey={movie.key}\n                changeIndexKey={this.changeKey}\n                setOpen={this.setOpen}\n                changeMoviePoster={this.changeMoviePoster}\n              />\n            ))}\n          </GridList>\n\n          <Modal\n            open={this.state.open}\n            onClose={() => {\n              this.setOpen(false);\n            }}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n          >\n            {\n              <div style={getModalStyle()}>\n                <div style={info()}>\n                  <h7>\n                    Title: {this.state.moviePoster.Title} <br />\n                    Director: {this.state.moviePoster.Director} <br />\n                    Genre: {this.state.moviePoster.Genre}\n                    <br />\n                    IMDB Rating: {this.state.moviePoster.imdbRating}\n                  </h7>\n                  <div>\n                    <select name=\"perf_listSelection\">\n                      {this.ModalDropOptions}\n                    </select>\n                  </div>\n                </div>\n                <img\n                  src={this.state.moviePoster.Poster}\n                  height={\"auto\"}\n                  alt={\"poster\"}\n                />\n\n                <IconButton\n                  onClick={() => {\n                    const deleteTargetKey = this.state.key;\n                    var newMovieArray = [];\n                    this.state.movies_list.forEach((item, index) => {\n                      if (item.key != this.state.key) {\n                        newMovieArray.push(item);\n                      }\n                    });\n                    this.setState({\n                      movies_list: [],\n                    });\n\n                    this.setState({\n                      movies_list: [...newMovieArray],\n                    });\n\n                    this.setOpen(false);\n                  }}\n                >\n                  <DeleteSweepIcon style={{ color: \"white\" }} />\n                </IconButton>\n              </div>\n            }\n          </Modal>\n\n          <button\n            type=\"button\"\n            onClick={this.loadmore}\n            style={{ position: \"relative\", alignItems: \"center\" }}\n          >\n            Load More\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"../App.css\";\nimport config from \"./config.js\";\nimport useForm from \"./useForm\";\n\nimport { Alert } from \"reactstrap\";\n\n/*\nnode node_modules/reac  t-scripts/scripts/start.js\n\nFix react page doesn't update on file change *WORKS*\nsudo -i\necho 1048576 > /proc/sys/fs/inotify/max_user_watches\nexit\n\n*/\nconst firebase = require(\"firebase\");\n\nfunction AddMovie() {\n  const [shouldRender, setShouldRender] = useState(true);\n\n  let scrollRef = null; //used to refer scrollRef, so that on content change window is scrolled to bottom automaticallu\n\n  const divStyle = {\n    backgroundColor: \"#eadedb\",\n    backgroundRepeat: \"repeat-y\",\n    position: \"relative\",\n    height: \"80vh\",\n    width: \"100%\",\n    display: \"flex\",\n    //alignItems: 'center',\n    //justifyContent: 'center',\n    fontFamily: \"Raleway, sans-serif\",\n    fontStyle: \"2px\",\n    //textTransform: 'uppercase',\n    letterSpacing: \"1px\",\n  };\n  const formInputFontStyle = {\n    fontFamily: \"Raleway, sans-serif\",\n    fontStyle: \"32px\",\n    marginBottom: \"20px\",\n  };\n\n  const formInputDivStyle = {\n    position: \"relative\",\n    fontSize: \"12px\",\n    left: \"10vw\",\n    top: \"8vh\",\n  };\n\n  const formPrintDivStyle = {\n    position: \"absolute\",\n    left: \"35vw\",\n    top: \"8vh\",\n    width: \"60vw\",\n    height: \"60vh\",\n    border: \"dotted blue\",\n    borderWidth: \"2px\",\n    borderColor: \"#2a4944\",\n  };\n\n  const formLabelFontStyle = {\n    fontFamily: \"lucida grande,arial\",\n    fontSize: \"1vw\",\n    fontWeight: \"bold\",\n    color: \"#2E4A62\",\n    position: \"relative\",\n    top: \"0vw\",\n    left: \"-1vw\",\n  };\n\n  useEffect(() => {\n    //console.log(\"shouldRender: \" + shouldRender);\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n  });\n\n  const [data, setData] = useState([]);\n\n  const [values, setValues] = useState({ newMovieID: \"\" });\n\n  const handleTextChange = (event) => {\n    console.log(event.target.name, \"new movie is:\" + event.target.value);\n    console.log(\"event.target.name is:\" + event.target.name);\n    setValues({\n      [event.target.name]: event.target.value,\n    });\n    console.log(\"values.newMovieID\" + values.newMovieID);\n  };\n\n  //Submission function\n  const handleSubmit = (event) => {\n    console.log(\"enter submit callback for adding a new movie\");\n    event.preventDefault();\n    console.log(\"At submission, values.newMovieID is: \" + values.newMovieID);\n    let alreadyExist = false;\n\n    //get a reference to the database\n    let AllLists = firebase.database().ref(\"AllLists\");\n    let allMovies = AllLists.child(\"All\");\n\n    allMovies.on(\"value\", (snapshot) => {\n      const receivedJSON = snapshot.val();\n      console.log(receivedJSON);\n      snapshot.forEach(function (childSnapshot) {\n        var IMDbID = childSnapshot.child(\"IMDbID\").val();\n        if (IMDbID == values.newMovieID) {\n          alreadyExist = true;\n        }\n      });\n    });\n\n    if (alreadyExist) console.log(\"❌Movie already in database, not added\");\n    else console.log(\"✅ Movie not in database, now add\");\n\n    //if not existed in our own database, find it in IMDB and store to our own\n    if (!alreadyExist) {\n      const axios = require(\"axios\").default; // axios.<method> will now provide autocomplete and parameter typings\n\n      let url =\n        \"https://www.omdbapi.com/?apikey=16e23e6c&i=\" + values.newMovieID;\n      let recvPack = axios.get(url);\n      let packData;\n      let recvTitle;\n      let recvDirector;\n      let recvRating;\n      let recvPosterURL;\n      let recvActors;\n      let recvGenre;\n      axios\n        .get(url)\n        .then((response) => {\n          //A unique ID, Title, Poster source, Director, IMDbID, Actors\n          packData = response.data;\n          recvTitle = packData.Title;\n          recvDirector = packData.Director;\n          recvRating = packData.imdbRating;\n          recvPosterURL = packData.Poster;\n          recvActors = packData.Actors;\n          recvGenre = packData.Genre;\n          //console.log(movieURLs[index])\n          //movieArray[index].title = packData.data.Title;                  //new value\n        })\n        .then(() => {\n          console.log(\"recvTitle is: \" + recvTitle);\n          console.log(\"recvDirector is: \" + recvDirector);\n          console.log(\"recvRating is: \" + recvRating);\n          console.log(\"recvPosterURL is: \" + recvPosterURL);\n          console.log(\"recvActors is: \" + recvActors);\n          console.log(\"recvGenre is: \" + recvGenre);\n          firebase.database().ref(\"AllLists\").child(\"All\").push({\n            IMDbID: values.newMovieID,\n            Title: recvTitle,\n            PosterURL: recvPosterURL,\n            Director: recvDirector,\n            Actors: recvActors,\n            Genre: recvGenre,\n            Rating: recvRating,\n          });\n        });\n    }\n\n    setVisible(true);\n    //set everything to default after submission\n    setValues({ newMovieID: \"\" });\n  };\n\n  //used for configuring the alert box\n  const [visible, setVisible] = useState(false);\n  const onafterprint = () => setVisible(false);\n\n  return (\n    <div style={divStyle}>\n      <form onSubmit={handleSubmit} noValidate>\n        <div style={formInputDivStyle}>\n          <label style={formLabelFontStyle}>IMDBid</label>\n          <br />\n          <input\n            name=\"newMovieID\"\n            type=\"newMovieID\"\n            value={values.newMovieID}\n            onChange={handleTextChange}\n            style={formInputFontStyle}\n          />\n        </div>\n\n        <div style={formInputDivStyle} onClick={handleSubmit}>\n          <button type=\"submit\">submit</button>\n        </div>\n\n        <Alert\n          style={formInputDivStyle}\n          color=\"info\"\n          isOpen={visible}\n          toggle={onafterprint}\n          fade={true}\n        >\n          Add request sent!\n        </Alert>\n      </form>\n    </div>\n  );\n}\n\nexport default AddMovie;\n","import React, { useEffect, useState } from \"react\";\nimport \"../App.css\";\nimport config from \"./config.js\";\nimport useForm from \"./useForm\";\n\nimport { Alert } from \"reactstrap\";\n\n/*\nnode node_modules/reac  t-scripts/scripts/start.js\n\nFix react page doesn't update on file change *WORKS*\nsudo -i\necho 1048576 > /proc/sys/fs/inotify/max_user_watches\nexit\n\n*/\nconst firebase = require(\"firebase\");\n\nfunction CreateList() {\n  const CreateListStyle = {\n    backgroundColor: \"white\",\n    backgroundRepeat: \"repeat-y\",\n    position: \"relative\",\n    height: \"80vh\",\n    width: \"100%\",\n    display: \"flex\",\n    //alignItems: 'center',\n    //justifyContent: 'center',\n    fontFamily: \"Raleway, sans-serif\",\n    fontStyle: \"2px\",\n    //textTransform: 'uppercase',\n    letterSpacing: \"1px\",\n  };\n  const formInputFontStyle = {\n    fontFamily: \"Raleway, sans-serif\",\n    fontStyle: \"32px\",\n    marginBottom: \"20px\",\n  };\n\n  const formInputDivStyle = {\n    position: \"relative\",\n    fontSize: \"12px\",\n    left: \"10vw\",\n    top: \"8vh\",\n  };\n\n  const formLabelFontStyle = {\n    fontFamily: \"lucida grande,arial\",\n    fontSize: \"1vw\",\n    fontWeight: \"bold\",\n    color: \"black\",\n    position: \"relative\",\n    top: \"0vw\",\n    left: \"-1vw\",\n  };\n\n  useEffect(() => {\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n  });\n\n  const [values, setValues] = useState({ newlist: \"\" });\n\n  const handleTextChange = (event) => {\n    console.log(event.target.name, \"newlist is:\" + event.target.value);\n    setValues({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  //Submission function\n  const handleSubmit = (event) => {\n    console.log(\"enter submit callback\");\n    event.preventDefault();\n    // firebase.database().ref('data').push().set(values);\n    console.log(\"values.newlist is: \" + values.newlist);\n    firebase.database().ref(\"AllLists\").child(values.newlist).set(\"\"); //just create an empty list with stub \"\"\n    setVisible(true);\n    //set everything to default after submission\n    setValues({ newlist: \"\" });\n  };\n\n  //used for configuring the alert box\n  const [visible, setVisible] = useState(false);\n  const onafterprint = () => setVisible(false);\n\n  return (\n    <div className=\"CreateList\" style={CreateListStyle}>\n      <form onSubmit={handleSubmit} noValidate>\n        <div style={formInputDivStyle}>\n          <label style={formLabelFontStyle}>List Name</label>\n          <br />\n          <input\n            name=\"newlist\"\n            type=\"newlist\"\n            value={values.newlist}\n            onChange={handleTextChange}\n            style={formInputFontStyle}\n          />\n        </div>\n\n        <div style={formInputDivStyle} onClick={handleSubmit}>\n          <button type=\"submit\">submit</button>\n        </div>\n\n        <Alert\n          style={formInputDivStyle}\n          color=\"info\"\n          isOpen={visible}\n          toggle={onafterprint}\n          fade={true}\n        >\n          The list is now added!\n        </Alert>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateList;\n","import React, { Component } from \"react\";\nimport Home from \"./Home\";\n\nimport MovieGallery from \"./MovieGallery\";\nimport AddMovie from \"./AddMovie\";\nimport CreateList from \"./CreateList\";\n\nexport class Body extends Component {\n  displayContent = () => {\n    var activeTab = this.props.activeTab;\n    console.log(\"Body.js: activeTab is\", this.props.activeTab);\n    if (activeTab === 1) return <MovieGallery />;\n    else if (activeTab === 2) return <AddMovie />;\n    else if (activeTab === 3) return <CreateList />;\n    else return <MovieGallery />;\n  };\n  render() {\n    return this.displayContent();\n  }\n}\n\nexport default Body;\n","import React, { Component } from 'react'\nimport TabList from './components/TabList'\nimport Body from './components/Body'\n\nimport \"./App.css\"\nexport class App extends Component {\n    constructor(){\n        super();\n        this.state = {\n            activeTab: 1   //home is by default the tab selected\n        }\n\n        this.changeTab = (id) =>{   //whenever is function is execute, send me back the id\n            this.setState({\n                activeTab: id        \n            })\n            console.log(\"App.js: id is %d\",id)\n        }\n    }\n\n    \n    render() {\n        //add the states, in this case the active tabs\n        \n        //define tabs in the nevigation bar\n        const tablist = [\n            {id: 1,title: 'Movies'},\n            {id: 2,title: 'Add Movies'},\n            {id: 3,title: 'Create List'},\n        ]\n        return ( \n            <div className=\"body\" >\n                <div className=\"nav-bar\" >\n                    <TabList tabs={tablist}  activeTab={this.state.activeTab}  changeTab={this.changeTab}/>      \n                </div> \n                 <div className=\"main-body\" >\n                    <Body activeTab={this.state.activeTab}/>\n                </div> \n            </div>\n        )\n    }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}